FROM node:24-alpine AS base

# Security: Install security updates
RUN apk update && apk upgrade && \
    apk add --no-cache dumb-init tini && \
    rm -rf /var/cache/apk/* /tmp/*

# Security: Create minimal user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001 -G nodejs -h /app -s /sbin/nologin

WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production --no-audit --no-fund && \
    npm cache clean --force && \
    rm -rf /tmp/* /root/.npm

FROM node:24-alpine AS build
WORKDIR /app
COPY package*.json ./
RUN npm ci --no-audit --no-fund
COPY . .
RUN npm run build && rm -rf /tmp/* /root/.npm

FROM scratch AS runtime-base
COPY --from=base /etc/passwd /etc/passwd
COPY --from=base /etc/group /etc/group
COPY --from=base /usr/bin/dumb-init /usr/bin/dumb-init
COPY --from=base /lib/ld-musl-x86_64.so.1 /lib/ld-musl-x86_64.so.1

FROM node:24-alpine AS runtime

# Security: Remove unnecessary packages
RUN apk del --purge apk-tools && \
    rm -rf /var/cache/apk/* /tmp/* /usr/share/man /usr/share/doc

# Security: Copy minimal files
COPY --from=runtime-base / /
COPY --from=base --chown=1001:1001 /app/node_modules /app/node_modules
COPY --from=build --chown=1001:1001 /app/.next /app/.next
COPY --from=build --chown=1001:1001 /app/public /app/public
COPY --from=build --chown=1001:1001 /app/package.json /app/package.json

# Security: Set filesystem permissions
RUN chmod -R 755 /app && \
    chmod -R 644 /app/.next && \
    chmod 755 /app/.next/server

WORKDIR /app
USER 1001:1001

EXPOSE 3000

# Security: Use tini as PID 1
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "server.js"]

# Security labels
LABEL security.scan="enabled" \
      security.non-root="true" \
      security.readonly="true"