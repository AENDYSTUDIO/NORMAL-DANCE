name: üîê Supply Chain Security

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  sbom-generation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          format: spdx-json
          output-file: sbom.spdx.json
      - name: Sign SBOM
        uses: sigstore/cosign-installer@v3
      - run: cosign sign-blob --yes sbom.spdx.json --output-signature sbom.sig
      - name: Upload SBOM
        uses: actions/upload-artifact@v3
        with:
          name: sbom
          path: |
            sbom.spdx.json
            sbom.sig

  vulnerability-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'normaldance'
          path: '.'
          format: 'ALL'
      - name: Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

  sign-artifacts:
    runs-on: ubuntu-latest
    needs: [sbom-generation, vulnerability-scan]
    steps:
      - uses: actions/checkout@v4
      - name: Install cosign
        uses: sigstore/cosign-installer@v3
      - name: Build and sign image
        run: |
          docker build -t ghcr.io/normaldance/app:${{ github.sha }} .
          cosign sign --yes ghcr.io/normaldance/app:${{ github.sha }}
      - name: Generate provenance
        uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.9.0
        with:
          image: ghcr.io/normaldance/app
          digest: ${{ steps.build.outputs.digest }}