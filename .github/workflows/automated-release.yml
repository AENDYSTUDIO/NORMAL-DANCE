name: ðŸš€ Automated Release Pipeline

on:
  push:
    branches: [main]

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - run: npm ci
      
      - name: Run tests
        run: |
          npm run test:coverage
          npm run test:mutation
          npm run security:audit
      
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 19
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and sign container
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          docker build -t ghcr.io/normaldance/app:${{ steps.semantic.outputs.new_release_version }} .
          cosign sign --yes ghcr.io/normaldance/app:${{ steps.semantic.outputs.new_release_version }}
      
      - name: Deploy to staging
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          kubectl set image deployment/normaldance-app app=ghcr.io/normaldance/app:${{ steps.semantic.outputs.new_release_version }} -n staging
          kubectl rollout status deployment/normaldance-app -n staging --timeout=300s
      
      - name: Run smoke tests
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          npm run test:smoke -- --env=staging
      
      - name: Deploy to production
        if: steps.semantic.outputs.new_release_published == 'true' && success()
        run: |
          kubectl set image deployment/normaldance-app app=ghcr.io/normaldance/app:${{ steps.semantic.outputs.new_release_version }} -n production
          kubectl rollout status deployment/normaldance-app -n production --timeout=600s
      
      - name: Rollback on failure
        if: failure()
        run: |
          kubectl rollout undo deployment/normaldance-app -n production
          kubectl rollout status deployment/normaldance-app -n production