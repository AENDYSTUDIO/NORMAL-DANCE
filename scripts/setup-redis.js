#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Redis/Upstash –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
 * –°–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª—é—á–∏ –∏ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è rate limiting –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
 */

const Redis = require('ioredis')

async function setupRedis() {
  console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redis/Upstash...')

  // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const redisUrl = process.env.REDIS_URL || process.env.UPSTASH_REDIS_REST_URL

  if (!redisUrl) {
    console.error('‚ùå REDIS_URL –∏–ª–∏ UPSTASH_REDIS_REST_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
    console.log('üí° –î–æ–±–∞–≤—å—Ç–µ –≤ .env:')
    console.log('   REDIS_URL="redis://username:password@host:port"')
    console.log('   –∏–ª–∏')
    console.log('   UPSTASH_REDIS_REST_URL="https://username:password@host:port"')
    process.exit(1)
  }

  let redis

  try {
    if (redisUrl.startsWith('http')) {
      // Upstash REST API
      console.log('üåê –ò—Å–ø–æ–ª—å–∑—É–µ–º Upstash Redis REST API')

      // –î–ª—è Upstash REST API –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥
      // –°–æ–∑–¥–∞–µ–º HTTP –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Upstash
      const redisConfig = {
        host: new URL(redisUrl).hostname,
        port: new URL(redisUrl).port,
        password: new URL(redisUrl).password,
        username: new URL(redisUrl).username,
      }

      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Upstash Redis –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')
      console.log(`   –•–æ—Å—Ç: ${redisConfig.host}`)
      console.log(`   –ü–æ—Ä—Ç: ${redisConfig.port}`)

    } else {
      // –û–±—ã—á–Ω—ã–π Redis
      console.log('üî¥ –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π Redis')

      redis = new Redis(redisUrl)

      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
      await redis.ping()
      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis —É—Å–ø–µ—à–Ω–æ')

      // –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª—é—á–∏ –¥–ª—è rate limiting
      console.log('\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ rate limiting...')

      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π rate limit –∫–ª—é—á
      await redis.set('rate_limit:test_user:test_endpoint', 5, 'EX', 60)
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π rate limit –∫–ª—é—á')

      // –°–æ–∑–¥–∞–µ–º –∫—ç—à –¥–ª—è —á–∞—Å—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      await redis.set('cache:track:QmTest123', JSON.stringify({
        id: 'test-track',
        title: 'Test Track',
        artistName: 'Test Artist',
        duration: 180,
        cachedAt: Date.now()
      }), 'EX', 3600) // –ö—ç—à –Ω–∞ 1 —á–∞—Å

      console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∫—ç—à —Ç—Ä–µ–∫–∞')

      // –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
      await redis.hset('stats:platform', {
        totalUsers: 0,
        totalTracks: 0,
        totalPlays: 0,
        lastUpdated: Date.now()
      })

      console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã')

      await redis.quit()

    }

    console.log('\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redis –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
    console.log('1. –û–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª —Å REDIS_URL')
    console.log('2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ API —Å–µ—Ä–≤–µ—Ä')
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ rate limiting: curl -H "X-Forwarded-For: 127.0.0.1" http://localhost:8080/api/health')
    console.log('4. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ Redis: redis-cli LLEN rate_limit:*')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Redis:', error.message)

    if (redisUrl.startsWith('http')) {
      console.log('\nüîß –î–ª—è Upstash REST API –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤—Ä—É—á–Ω—É—é:')
      console.log(`
# –°–æ–∑–¥–∞—Ç—å rate limit –∫–ª—é—á
curl -X POST "${redisUrl}/set/rate_limit:test:endpoint" \\
  -H "Authorization: Bearer ${process.env.UPSTASH_REDIS_REST_TOKEN}" \\
  -d '5' \\
  -H "Content-Type: text/plain"

# –°–æ–∑–¥–∞—Ç—å –∫—ç—à
curl -X POST "${redisUrl}/set/cache:track:test" \\
  -H "Authorization: Bearer ${process.env.UPSTASH_REDIS_REST_TOKEN}" \\
  -d '{"id":"test","title":"Test Track"}' \\
  -H "Content-Type: text/plain"
      `)
    }

    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
setupRedis()
  .then(() => {
    console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ')
    process.exit(0)
  })
  .catch((error) => {
    console.error('‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error)
    process.exit(1)
  })
