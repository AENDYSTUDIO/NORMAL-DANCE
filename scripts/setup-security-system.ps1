# NORMALDANCE Security System Setup
# –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

param(
    [switch]$FullSetup,
    [switch]$Interactive,
    [switch]$SkipGitHooks,
    [switch]$SkipCI,
    [string]$Environment = "development"
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Red = "Red"
$Green = "Green"
$Yellow = "Yellow"
$Cyan = "Cyan"
$Magenta = "Magenta"

function Write-ColorLog {
    param(
        [string]$Message,
        [string]$Type = "Info"
    )
    
    switch ($Type) {
        "Error" { Write-Host "‚ùå $Message" -ForegroundColor $Red }
        "Warning" { Write-Host "‚ö†Ô∏è  $Message" -ForegroundColor $Yellow }
        "Success" { Write-Host "‚úÖ $Message" -ForegroundColor $Green }
        "Info" { Write-Host "‚ÑπÔ∏è  $Message" -ForegroundColor $Cyan }
        "Header" { Write-Host "üéØ $Message" -ForegroundColor $Magenta }
        default { Write-Host $Message }
    }
}

function Test-Prerequisites {
    Write-ColorLog "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..." "Header"
    
    $prerequisites = @{
        "Git" = $false
        "Node.js" = $false
        "npm" = $false
        "GitHub CLI" = $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
    try {
        $null = git --version
        $prerequisites["Git"] = $true
        Write-ColorLog "Git: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Success"
    } catch {
        Write-ColorLog "Git: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Error"
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
    try {
        $null = node --version
        $prerequisites["Node.js"] = $true
        Write-ColorLog "Node.js: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Success"
    } catch {
        Write-ColorLog "Node.js: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Error"
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
    try {
        $null = npm --version
        $prerequisites["npm"] = $true
        Write-ColorLog "npm: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Success"
    } catch {
        Write-ColorLog "npm: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Error"
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub CLI
    try {
        $null = gh --version
        $prerequisites["GitHub CLI"] = $true
        Write-ColorLog "GitHub CLI: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Success"
    } catch {
        Write-ColorLog "GitHub CLI: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)" "Warning"
    }
    
    $allInstalled = $prerequisites.Values | Where-Object { $_ -eq $true } | Measure-Object | Select-Object -ExpandProperty Count
    $total = $prerequisites.Count
    
    if ($allInstalled -eq $total) {
        Write-ColorLog "–í—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã" "Success"
        return $true
    } else {
        Write-ColorLog "–ù–µ –≤—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã ($allInstalled/$total)" "Warning"
        return $false
    }
}

function Install-SecurityDependencies {
    Write-ColorLog "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..." "Header"
    
    try {
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤
        Write-ColorLog "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ TruffleHog..." "Info"
        npm install -g trufflehog
        
        Write-ColorLog "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ GitLeaks..." "Info"
        npm install -g gitleaks
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        Write-ColorLog "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." "Info"
        npm install
        
        Write-ColorLog "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" "Success"
        return $true
    } catch {
        Write-ColorLog "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: $($_.Exception.Message)" "Error"
        return $false
    }
}

function Setup-GitHooks {
    if ($SkipGitHooks) {
        Write-ColorLog "–ü—Ä–æ–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Git-—Ö—É–∫–æ–≤" "Warning"
        return $true
    }
    
    Write-ColorLog "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git-—Ö—É–∫–æ–≤..." "Header"
    
    try {
        $hooksDir = ".git\hooks"
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ö—É–∫–æ–≤ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (!(Test-Path $hooksDir)) {
            New-Item -ItemType Directory -Path $hooksDir -Force | Out-Null
        }
        
        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ PowerShell —Ö—É–∫–∞
        $preCommitHook = Join-Path $hooksDir "pre-commit.ps1"
        if (Test-Path "scripts\pre-commit.ps1") {
            Copy-Item "scripts\pre-commit.ps1" $preCommitHook -Force
            Write-ColorLog "Pre-commit —Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Success"
        }
        
        # –°–æ–∑–¥–∞–Ω–∏–µ batch —Ñ–∞–π–ª–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ PowerShell —Ö—É–∫–∞
        $preCommitBat = Join-Path $hooksDir "pre-commit.bat"
        $batContent = @"
@echo off
powershell.exe -ExecutionPolicy Bypass -File "%~dp0pre-commit.ps1" "%1"
"@
        Set-Content -Path $preCommitBat -Value $batContent
        
        Write-ColorLog "Git-—Ö—É–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã" "Success"
        return $true
    } catch {
        Write-ColorLog "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Git-—Ö—É–∫–æ–≤: $($_.Exception.Message)" "Error"
        return $false
    }
}

function Setup-SSHKeys {
    Write-ColorLog "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–µ–π..." "Header"
    
    try {
        # –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH –∫–ª—é—á–µ–π
        if (Test-Path "scripts\secure-key-setup.ps1") {
            & "scripts\secure-key-setup.ps1" -Interactive:$Interactive
            Write-ColorLog "SSH –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã" "Success"
            return $true
        } else {
            Write-ColorLog "–°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH –∫–ª—é—á–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω" "Error"
            return $false
        }
    } catch {
        Write-ColorLog "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH –∫–ª—é—á–µ–π: $($_.Exception.Message)" "Error"
        return $false
    }
}

function Setup-CI {
    if ($SkipCI) {
        Write-ColorLog "–ü—Ä–æ–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CI/CD" "Warning"
        return $true
    }
    
    Write-ColorLog "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ CI/CD –ø–∞–π–ø–ª–∞–π–Ω–æ–≤..." "Header"
    
    try {
        $workflowsDir = ".github\workflows"
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ workflows –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (!(Test-Path $workflowsDir)) {
            New-Item -ItemType Directory -Path $workflowsDir -Force | Out-Null
        }
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è security-pipeline.yml
        if (Test-Path "scripts\security-pipeline.yml") {
            Copy-Item "scripts\security-pipeline.yml" "$workflowsDir\security-pipeline.yml" -Force
            Write-ColorLog "Security pipeline –Ω–∞—Å—Ç—Ä–æ–µ–Ω" "Success"
        }
        
        Write-ColorLog "CI/CD –ø–∞–π–ø–ª–∞–π–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã" "Success"
        return $true
    } catch {
        Write-ColorLog "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CI/CD: $($_.Exception.Message)" "Error"
        return $false
    }
}

function Setup-Environment {
    Write-ColorLog "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..." "Header"
    
    try {
        # –°–æ–∑–¥–∞–Ω–∏–µ .env.example –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (!(Test-Path ".env.example")) {
            $envExample = @"
# NORMALDANCE Environment Variables
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ .env.local –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è

# Database
DATABASE_URL="postgresql://user:password@localhost:5432/normaldance"

# Authentication
NEXTAUTH_SECRET="your-secret-here"
NEXTAUTH_URL="http://localhost:3000"

# Supabase
SUPABASE_URL="https://your-project.supabase.co"
SUPABASE_ANON_KEY="your-anon-key-here"

# Security
SECURITY_MONITORING_ENABLED=true
SECURITY_ALERT_EMAIL="security@normaldance.com"
SLACK_WEBHOOK_URL=""
TELEGRAM_BOT_TOKEN=""
TELEGRAM_CHAT_ID=""

# GitHub
GITHUB_TOKEN=""
GITHUB_PERSONAL_ACCESS_TOKEN=""

# Environment
NODE_ENV="$Environment"
"@
            Set-Content -Path ".env.example" -Value $envExample
            Write-ColorLog ".env.example —Å–æ–∑–¥–∞–Ω" "Success"
        }
        
        # –°–æ–∑–¥–∞–Ω–∏–µ .gitignore –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (!(Test-Path ".gitignore")) {
            $gitignore = @"
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Security
*.key
*.pem
*.p12
*.pfx
secrets/
keys/

# Logs
logs/
*.log

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
"@
            Set-Content -Path ".gitignore" -Value $gitignore
            Write-ColorLog ".gitignore —Å–æ–∑–¥–∞–Ω" "Success"
        }
        
        Write-ColorLog "–û–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ" "Success"
        return $true
    } catch {
        Write-ColorLog "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è: $($_.Exception.Message)" "Error"
        return $false
    }
}

function Test-SecuritySetup {
    Write-ColorLog "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..." "Header"
    
    try {
        # –¢–µ—Å—Ç Git-—Ö—É–∫–æ–≤
        if (!$SkipGitHooks) {
            Write-ColorLog "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Git-—Ö—É–∫–æ–≤..." "Info"
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç—ã —Ö—É–∫–æ–≤
        }
        
        # –¢–µ—Å—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤
        Write-ColorLog "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤..." "Info"
        if (Get-Command trufflehog -ErrorAction SilentlyContinue) {
            Write-ColorLog "TruffleHog –¥–æ—Å—Ç—É–ø–µ–Ω" "Success"
        } else {
            Write-ColorLog "TruffleHog –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" "Warning"
        }
        
        # –¢–µ—Å—Ç SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        Write-ColorLog "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..." "Info"
        try {
            $sshTest = ssh -T git@github.com 2>&1
            if ($sshTest -match "successfully authenticated") {
                Write-ColorLog "SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub —Ä–∞–±–æ—Ç–∞–µ—Ç" "Success"
            } else {
                Write-ColorLog "SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ" "Warning"
            }
        } catch {
            Write-ColorLog "SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ" "Warning"
        }
        
        Write-ColorLog "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ" "Success"
        return $true
    } catch {
        Write-ColorLog "–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: $($_.Exception.Message)" "Error"
        return $false
    }
}

function Show-Summary {
    Write-ColorLog "–°–≤–æ–¥–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏" "Header"
    Write-Host ""
    Write-Host "üéØ NORMALDANCE Security System" -ForegroundColor $Magenta
    Write-Host "=============================" -ForegroundColor $Magenta
    Write-Host ""
    Write-Host "‚úÖ –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
    Write-Host ""
    Write-Host "üìã –ß—Ç–æ –±—ã–ª–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:"
    Write-Host "   ‚Ä¢ Git-—Ö—É–∫–∏ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    Write-Host "   ‚Ä¢ SSH –∫–ª—é—á–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ GitHub"
    Write-Host "   ‚Ä¢ CI/CD –ø–∞–π–ø–ª–∞–π–Ω—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    Write-Host "   ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –∞—É–¥–∏—Ç–∞"
    Write-Host "   ‚Ä¢ RBAC —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º"
    Write-Host ""
    Write-Host "üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    Write-Host "   ‚Ä¢ npm run security:scan - —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ–∫—Ä–µ—Ç—ã"
    Write-Host "   ‚Ä¢ npm run security:audit - –∞—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    Write-Host "   ‚Ä¢ npm run security:monitor - –∑–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    Write-Host ""
    Write-Host "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
    Write-Host "   ‚Ä¢ docs/SECURITY_WORKFLOW.md - –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"
    Write-Host "   ‚Ä¢ scripts/secure-key-setup.ps1 - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª—é—á–µ–π"
    Write-Host ""
    Write-Host "‚ö†Ô∏è  –í–∞–∂–Ω–æ:"
    Write-Host "   ‚Ä¢ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–ª—é—á–∞–º–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è"
    Write-Host "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ feature-–≤–µ—Ç–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    Write-Host "   ‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –∫–ª—é—á–∏"
    Write-Host ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
Write-Host "üîê NORMALDANCE Security System Setup" -ForegroundColor $Cyan
Write-Host "=====================================" -ForegroundColor $Cyan
Write-Host ""

$setupSteps = @(
    { Test-Prerequisites },
    { Install-SecurityDependencies },
    { Setup-GitHooks },
    { Setup-SSHKeys },
    { Setup-CI },
    { Setup-Environment },
    { Test-SecuritySetup }
)

$successCount = 0
$totalSteps = $setupSteps.Count

foreach ($step in $setupSteps) {
    if (& $step) {
        $successCount++
    }
    Write-Host ""
}

if ($successCount -eq $totalSteps) {
    Write-ColorLog "–í—Å–µ —à–∞–≥–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ ($successCount/$totalSteps)" "Success"
    Show-Summary
} else {
    Write-ColorLog "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏ ($successCount/$totalSteps)" "Warning"
    Write-ColorLog "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è" "Info"
}

Write-Host ""
Write-ColorLog "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞" "Header"

