#!/usr/bin/env node

/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π Security Audit —Å–∫—Ä–∏–ø—Ç
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –≤–Ω–µ—à–Ω–µ–º—É –∞—É–¥–∏—Ç—É
 */

const { execSync } = require('child_process')
const fs = require('fs')
const path = require('path')

class SecurityAuditor {
  constructor() {
    this.results = {
      critical: [],
      warnings: [],
      passed: [],
      score: 0
    }
  }

  async runFullAudit() {
    console.log('üîê –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û SECURITY AUDIT')
    console.log('=====================================\n')

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞—Ö
    await this.auditSmartContracts()

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º API –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    await this.auditAPI()

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
    await this.auditInfrastructure()

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await this.auditDatabase()

    // 5. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    await this.runTests()

    // 6. –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    this.displayResults()

    return this.results
  }

  async auditSmartContracts() {
    console.log('üîç –ê–£–î–ò–¢ –°–ú–ê–†–¢-–ö–û–ù–¢–†–ê–ö–¢–û–í')
    console.log('==========================')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º TrackNFT
    const trackNftPath = 'programs/tracknft/src/lib.rs'
    if (fs.existsSync(trackNftPath)) {
      const content = fs.readFileSync(trackNftPath, 'utf8')

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º artist validation
      if (content.includes('require!(artist.key() == authority.key(), ErrorCode::Unauthorized)')) {
        this.results.passed.push('‚úÖ TrackNFT: Artist validation –¥–æ–±–∞–≤–ª–µ–Ω–∞')
      } else {
        this.results.critical.push('‚ùå TrackNFT: Artist validation –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º track_counter
      if (content.includes('track_counter: u64')) {
        this.results.passed.push('‚úÖ TrackNFT: PDA collision prevention –¥–æ–±–∞–≤–ª–µ–Ω')
      } else {
        this.results.critical.push('‚ùå TrackNFT: track_counter –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º seeds —Å counter
      if (content.includes('&track_nft.track_counter.to_le_bytes()')) {
        this.results.passed.push('‚úÖ TrackNFT: Seeds –∏—Å–ø–æ–ª—å–∑—É—é—Ç counter –≤–º–µ—Å—Ç–æ timestamp')
      } else {
        this.results.warnings.push('‚ö†Ô∏è TrackNFT: Seeds –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å timestamp')
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Staking
    const stakingPath = 'programs/staking/src/lib.rs'
    if (fs.existsSync(stakingPath)) {
      const content = fs.readFileSync(stakingPath, 'utf8')

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º time-lock
      if (content.includes('config_update_time_lock')) {
        this.results.passed.push('‚úÖ Staking: Time-lock protection –¥–æ–±–∞–≤–ª–µ–Ω')
      } else {
        this.results.critical.push('‚ùå Staking: Time-lock –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º NDT
    const ndtPath = 'programs/ndt/src/lib.rs'
    if (fs.existsSync(ndtPath)) {
      const content = fs.readFileSync(ndtPath, 'utf8')

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º hard cap
      if (content.includes('max_supply: u64')) {
        this.results.passed.push('‚úÖ NDT: Hard cap —ç–º–∏—Å—Å–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω')
      } else {
        this.results.critical.push('‚ùå NDT: Hard cap –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º halving
      if (content.includes('halving_interval')) {
        this.results.passed.push('‚úÖ NDT: Halving –º–µ—Ö–∞–Ω–∏–∑–º –¥–æ–±–∞–≤–ª–µ–Ω')
      } else {
        this.results.warnings.push('‚ö†Ô∏è NDT: Halving –º–µ—Ö–∞–Ω–∏–∑–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
      }
    }

    console.log('')
  }

  async auditAPI() {
    console.log('üåê –ê–£–î–ò–¢ API –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò')
    console.log('=========================')

    const streamRoutePath = 'src/app/api/tracks/stream/route.ts'
    if (fs.existsSync(streamRoutePath)) {
      const content = fs.readFileSync(streamRoutePath, 'utf8')

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º file size limits
      if (content.includes('MAX_FILE_SIZE') && content.includes('MAX_CHUNK_SIZE')) {
        this.results.passed.push('‚úÖ API: File size limits –¥–æ–±–∞–≤–ª–µ–Ω—ã')
      } else {
        this.results.critical.push('‚ùå API: File size limits –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç')
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º range validation
      if (content.includes('rangeMatch') && content.includes('validateRange')) {
        this.results.passed.push('‚úÖ API: Range header validation –¥–æ–±–∞–≤–ª–µ–Ω–∞')
      } else {
        this.results.warnings.push('‚ö†Ô∏è API: Range validation –Ω–µ–ø–æ–ª–Ω–∞—è')
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º input validation
      if (content.includes('Math.max(0, Math.min') && content.includes('replace(/<[^>]*>/g')) {
        this.results.passed.push('‚úÖ API: Input validation –¥–æ–±–∞–≤–ª–µ–Ω–∞')
      } else {
        this.results.warnings.push('‚ö†Ô∏è API: Input validation –Ω–µ–ø–æ–ª–Ω–∞—è')
      }
    }

    console.log('')
  }

  async auditInfrastructure() {
    console.log('üèóÔ∏è  –ê–£–î–ò–¢ –ò–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–´')
    console.log('========================')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º .dockerignore
    if (fs.existsSync('.dockerignore')) {
      const dockerignore = fs.readFileSync('.dockerignore', 'utf8')
      if (dockerignore.includes('.env') && dockerignore.includes('node_modules')) {
        this.results.passed.push('‚úÖ Docker: .dockerignore –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
      } else {
        this.results.warnings.push('‚ö†Ô∏è Docker: .dockerignore –Ω–µ–ø–æ–ª–Ω—ã–π')
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Dockerfile.api
    const dockerfilePath = 'Dockerfile.api'
    if (fs.existsSync(dockerfilePath)) {
      const dockerfile = fs.readFileSync(dockerfilePath, 'utf8')

      if (dockerfile.includes('20.18-alpine') && dockerfile.includes('HEALTHCHECK')) {
        this.results.passed.push('‚úÖ Docker: Security hardening –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
      } else {
        this.results.warnings.push('‚ö†Ô∏è Docker: Security hardening –Ω–µ–ø–æ–ª–Ω—ã–π')
      }
    }

    console.log('')
  }

  async auditDatabase() {
    console.log('üíæ –ê–£–î–ò–¢ –ë–ê–ó–´ –î–ê–ù–ù–´–•')
    console.log('===================')

    const schemaPath = 'prisma/schema.prisma'
    if (fs.existsSync(schemaPath)) {
      const schema = fs.readFileSync(schemaPath, 'utf8')

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º wallet –∏–Ω–¥–µ–∫—Å
      if (schema.includes('wallet      String?     @unique')) {
        this.results.passed.push('‚úÖ Database: Wallet normalization –¥–æ–±–∞–≤–ª–µ–Ω–∞')
      } else {
        this.results.critical.push('‚ùå Database: Wallet normalization –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º IPFS hash —Ç–∏–ø
      if (schema.includes('ipfsHash    String   @db.VarChar(255)')) {
        this.results.passed.push('‚úÖ Database: IPFS hash optimization –¥–æ–±–∞–≤–ª–µ–Ω')
      } else {
        this.results.warnings.push('‚ö†Ô∏è Database: IPFS hash optimization –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
      }
    }

    console.log('')
  }

  async runTests() {
    console.log('üß™ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò')
    console.log('==============================')

    try {
      // –ó–∞–ø—É—Å–∫–∞–µ–º security —Ç–µ—Å—Ç—ã
      console.log('–ó–∞–ø—É—Å–∫–∞–µ–º security —Ç–µ—Å—Ç—ã...')
      execSync('npm run test:security', {
        stdio: 'pipe',
        cwd: process.cwd()
      })
      this.results.passed.push('‚úÖ Security —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç')
    } catch (error) {
      this.results.warnings.push(`‚ö†Ô∏è Security —Ç–µ—Å—Ç—ã: ${error.message}`)
    }

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º TypeScript
      console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º TypeScript...')
      execSync('npx tsc --noEmit', {
        stdio: 'pipe',
        cwd: process.cwd()
      })
      this.results.passed.push('‚úÖ TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞')
    } catch (error) {
      this.results.critical.push(`‚ùå TypeScript –æ—à–∏–±–∫–∏: ${error.message}`)
    }

    console.log('')
  }

  displayResults() {
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ SECURITY AUDIT')
    console.log('=============================\n')

    // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    if (this.results.critical.length > 0) {
      console.log('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:')
      this.results.critical.forEach(item => console.log(`   ${item}`))
      console.log('')
    }

    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    if (this.results.warnings.length > 0) {
      console.log('‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:')
      this.results.warnings.forEach(item => console.log(`   ${item}`))
      console.log('')
    }

    // –£—Å–ø–µ—à–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    if (this.results.passed.length > 0) {
      console.log('‚úÖ –£–°–ü–ï–®–ù–´–ï –ü–†–û–í–ï–†–ö–ò:')
      this.results.passed.forEach(item => console.log(`   ${item}`))
      console.log('')
    }

    // –û–±—â–∏–π score
    const totalChecks = this.results.passed.length + this.results.warnings.length + this.results.critical.length
    const criticalCount = this.results.critical.length
    const warningCount = this.results.warnings.length
    const passedCount = this.results.passed.length

    this.results.score = Math.round((passedCount / totalChecks) * 100)

    console.log('üéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:')
    console.log(`   –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: ${criticalCount}`)
    console.log(`   –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${warningCount}`)
    console.log(`   –£—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: ${passedCount}`)
    console.log(`   –û–±—â–∏–π Score: ${this.results.score}%`)

    if (this.results.score >= 90 && criticalCount === 0) {
      console.log('\nüéâ –ü–†–û–ï–ö–¢ –ì–û–¢–û–í –ö –í–ù–ï–®–ù–ï–ú–£ –ê–£–î–ò–¢–£!')
      console.log('   –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∞—É–¥–∏—Ç–æ—Ä—ã:')
      console.log('   ‚Ä¢ Sec3 (—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ Solana)')
      console.log('   ‚Ä¢ OtterSec (–æ–ø—ã—Ç —Å DeFi)')
      console.log('   ‚Ä¢ Certik (–ø–æ–ª–Ω–∞—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è)')
    } else if (this.results.score >= 70) {
      console.log('\n‚ö†Ô∏è  –ü–†–û–ï–ö–¢ –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò –ü–ï–†–ï–î –ê–£–î–ò–¢–û–ú')
    } else {
      console.log('\n‚ùå –ü–†–û–ï–ö–¢ –ù–ï –ì–û–¢–û–í –ö –ê–£–î–ò–¢–£')
    }

    console.log('\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:')
    console.log('1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã')
    console.log('2. –£—Å—Ç—Ä–∞–Ω–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è')
    console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ')
    console.log('4. –ü—Ä–æ–≤–µ—Å—Ç–∏ –≤–Ω–µ—à–Ω–∏–π –∞—É–¥–∏—Ç')
    console.log('5. –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤')
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞—É–¥–∏—Ç
async function main() {
  const auditor = new SecurityAuditor()
  await auditor.runFullAudit()
}

main().catch(console.error)
