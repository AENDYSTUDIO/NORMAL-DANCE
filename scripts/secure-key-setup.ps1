# NORMALDANCE Secure Key Setup
# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–µ–π –∏ MCP –¥–ª—è GitHub

param(
    [string]$KeyName = "normaldance-github",
    [string]$KeyType = "ed25519",
    [switch]$SetupMCP,
    [switch]$Interactive
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Red = "Red"
$Green = "Green"
$Yellow = "Yellow"
$Cyan = "Cyan"

function Write-ColorLog {
    param(
        [string]$Message,
        [string]$Type = "Info"
    )
    
    switch ($Type) {
        "Error" { Write-Host "‚ùå $Message" -ForegroundColor $Red }
        "Warning" { Write-Host "‚ö†Ô∏è  $Message" -ForegroundColor $Yellow }
        "Success" { Write-Host "‚úÖ $Message" -ForegroundColor $Green }
        "Info" { Write-Host "‚ÑπÔ∏è  $Message" -ForegroundColor $Cyan }
        default { Write-Host $Message }
    }
}

function Test-GitHubCLI {
    try {
        $null = gh --version
        return $true
    }
    catch {
        Write-ColorLog "GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Error"
        Write-ColorLog "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: https://cli.github.com/" "Info"
        return $false
    }
}

function Test-SSHAgent {
    try {
        $null = ssh-add -l
        return $true
    }
    catch {
        Write-ColorLog "SSH Agent –Ω–µ –∑–∞–ø—É—â–µ–Ω" "Warning"
        return $false
    }
}

function New-SSHKey {
    param(
        [string]$Name,
        [string]$Type
    )
    
    Write-ColorLog "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSH –∫–ª—é—á–∞: $Name ($Type)" "Info"
    
    $keyPath = Join-Path $env:USERPROFILE ".ssh\$Name"
    $publicKeyPath = "$keyPath.pub"
    
    try {
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–ª—é—á–∞
        if (Test-Path $keyPath) {
            Write-ColorLog "–ö–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $keyPath" "Warning"
            $overwrite = Read-Host "–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N)"
            if ($overwrite -ne "y" -and $overwrite -ne "Y") {
                return $null
            }
        }
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞
        $comment = "normaldance-github-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        ssh-keygen -t $Type -f $keyPath -C $comment -N '""'
        
        if ($LASTEXITCODE -eq 0) {
            Write-ColorLog "SSH –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω" "Success"
            
            # –ß—Ç–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞
            $publicKey = Get-Content $publicKeyPath -Raw
            Write-ColorLog "–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á:" "Info"
            Write-Host $publicKey.Trim()
            
            return @{
                PrivateKeyPath = $keyPath
                PublicKeyPath = $publicKeyPath
                PublicKey = $publicKey.Trim()
            }
        } else {
            Write-ColorLog "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SSH –∫–ª—é—á–∞" "Error"
            return $null
        }
    }
    catch {
        Write-ColorLog "–û—à–∏–±–∫–∞: $($_.Exception.Message)" "Error"
        return $null
    }
}

function Add-KeyToGitHub {
    param(
        [string]$PublicKey,
        [string]$Title
    )
    
    Write-ColorLog "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –≤ GitHub..." "Info"
    
    if (!(Test-GitHubCLI)) {
        return $false
    }
    
    try {
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        $authStatus = gh auth status 2>&1
        if ($LASTEXITCODE -ne 0) {
            Write-ColorLog "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ GitHub CLI" "Warning"
            gh auth login
            if ($LASTEXITCODE -ne 0) {
                Write-ColorLog "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏" "Error"
                return $false
            }
        }
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞
        $PublicKey | gh ssh-key add - -t $Title
        
        if ($LASTEXITCODE -eq 0) {
            Write-ColorLog "–ö–ª—é—á —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ GitHub" "Success"
            return $true
        } else {
            Write-ColorLog "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞ –≤ GitHub" "Error"
            return $false
        }
    }
    catch {
        Write-ColorLog "–û—à–∏–±–∫–∞: $($_.Exception.Message)" "Error"
        return $false
    }
}

function Set-SSHConfig {
    param(
        [string]$KeyPath
    )
    
    Write-ColorLog "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." "Info"
    
    $sshDir = Join-Path $env:USERPROFILE ".ssh"
    $configPath = Join-Path $sshDir "config"
    
    $configContent = @"
# NORMALDANCE GitHub Access Configuration
Host github.com
    HostName github.com
    User git
    IdentityFile $KeyPath
    IdentitiesOnly yes
    AddKeysToAgent yes

Host github-normaldance
    HostName github.com
    User git
    IdentityFile $KeyPath
    IdentitiesOnly yes
    AddKeysToAgent yes
"@

    try {
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .ssh –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (!(Test-Path $sshDir)) {
            New-Item -ItemType Directory -Path $sshDir -Force | Out-Null
        }
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if (Test-Path $configPath) {
            $existingConfig = Get-Content $configPath -Raw
            if ($existingConfig -notmatch "NORMALDANCE GitHub Access Configuration") {
                Add-Content -Path $configPath -Value "`n$configContent"
            }
        } else {
            Set-Content -Path $configPath -Value $configContent
        }
        
        Write-ColorLog "SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞" "Success"
        return $true
    }
    catch {
        Write-ColorLog "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH: $($_.Exception.Message)" "Error"
        return $false
    }
}

function Set-MCPConfig {
    Write-ColorLog "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ MCP –¥–ª—è GitHub..." "Info"
    
    $mcpConfigDir = Join-Path $env:USERPROFILE ".config\mcp"
    $mcpConfigPath = Join-Path $mcpConfigDir "config.json"
    
    $mcpConfig = @{
        mcpServers = @{
            github = @{
                command = "npx"
                args = @("-y", "@modelcontextprotocol/server-github")
                env = @{
                    GITHUB_PERSONAL_ACCESS_TOKEN = ""
                }
            }
        }
    }
    
    try {
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if (!(Test-Path $mcpConfigDir)) {
            New-Item -ItemType Directory -Path $mcpConfigDir -Force | Out-Null
        }
        
        # –ó–∞–ø–∏—Å—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        $mcpConfig | ConvertTo-Json -Depth 10 | Set-Content -Path $mcpConfigPath
        
        Write-ColorLog "MCP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞" "Success"
        Write-ColorLog "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GITHUB_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞" "Info"
        return $true
    }
    catch {
        Write-ColorLog "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP: $($_.Exception.Message)" "Error"
        return $false
    }
}

function Test-GitHubConnection {
    Write-ColorLog "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub..." "Info"
    
    try {
        $result = ssh -T git@github.com 2>&1
        if ($result -match "successfully authenticated") {
            Write-ColorLog "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub —É—Å–ø–µ—à–Ω–æ" "Success"
            return $true
        } else {
            Write-ColorLog "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub" "Error"
            Write-Host $result
            return $false
        }
    }
    catch {
        Write-ColorLog "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: $($_.Exception.Message)" "Error"
        return $false
    }
}

function Show-InteractiveMenu {
    Write-Host "`nüéµ NORMALDANCE GitHub Access Setup" -ForegroundColor Cyan
    Write-Host "===================================" -ForegroundColor Cyan
    Write-Host "1. –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å SSH –∫–ª—é—á"
    Write-Host "2. –î–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á –≤ GitHub"
    Write-Host "3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å MCP –¥–ª—è GitHub"
    Write-Host "4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub"
    Write-Host "5. –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ (–≤—Å–µ –ø—É–Ω–∫—Ç—ã)"
    Write-Host "6. –í—ã—Ö–æ–¥"
    
    $choice = Read-Host "`n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-6)"
    
    switch ($choice) {
        "1" {
            $keyName = Read-Host "–ò–º—è –∫–ª—é—á–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: normaldance-github)"
            if ([string]::IsNullOrEmpty($keyName)) { $keyName = "normaldance-github" }
            
            $keyType = Read-Host "–¢–∏–ø –∫–ª—é—á–∞ (ed25519/rsa, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ed25519)"
            if ([string]::IsNullOrEmpty($keyType)) { $keyType = "ed25519" }
            
            $keyInfo = New-SSHKey -Name $keyName -Type $keyType
            if ($keyInfo) {
                Set-SSHConfig -KeyPath $keyInfo.PrivateKeyPath
            }
        }
        
        "2" {
            $publicKey = Read-Host "–í–≤–µ–¥–∏—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á"
            $title = Read-Host "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ –≤ GitHub (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: NORMALDANCE-Access)"
            if ([string]::IsNullOrEmpty($title)) { $title = "NORMALDANCE-Access" }
            
            Add-KeyToGitHub -PublicKey $publicKey -Title $title
        }
        
        "3" {
            Set-MCPConfig
        }
        
        "4" {
            Test-GitHubConnection
        }
        
        "5" {
            Write-ColorLog "–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..." "Info"
            
            $keyInfo = New-SSHKey -Name $KeyName -Type $KeyType
            if ($keyInfo) {
                Set-SSHConfig -KeyPath $keyInfo.PrivateKeyPath
                Add-KeyToGitHub -PublicKey $keyInfo.PublicKey -Title "NORMALDANCE-Access"
                Set-MCPConfig
                Test-GitHubConnection
            }
        }
        
        "6" {
            Write-ColorLog "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!" "Success"
            return
        }
        
        default {
            Write-ColorLog "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" "Error"
        }
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
Write-Host "üîê NORMALDANCE Secure Key Setup" -ForegroundColor Cyan
Write-Host "===============================" -ForegroundColor Cyan

if ($Interactive) {
    Show-InteractiveMenu
} else {
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    Write-ColorLog "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞..." "Info"
    
    $keyInfo = New-SSHKey -Name $KeyName -Type $KeyType
    if ($keyInfo) {
        Set-SSHConfig -KeyPath $keyInfo.PrivateKeyPath
        
        $addToGitHub = Read-Host "–î–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á –≤ GitHub? (y/N)"
        if ($addToGitHub -eq "y" -or $addToGitHub -eq "Y") {
            Add-KeyToGitHub -PublicKey $keyInfo.PublicKey -Title "NORMALDANCE-Access"
        }
        
        if ($SetupMCP) {
            Set-MCPConfig
        }
        
        Test-GitHubConnection
    }
}

