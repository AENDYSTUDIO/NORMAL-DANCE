#!/usr/bin/env node

/**
 * NORMALDANCE Phase 1: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (Windows –≤–µ—Ä—Å–∏—è)
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üöÄ NORMALDANCE Phase 1: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (Windows)');
console.log('========================================================');

const fixes = {
  typescript: false,
  dependencies: false,
  database: false,
  build: false
};

// 1. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
function fixTypeScriptConfig() {
  console.log('\nüìù 1. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
  
  const tsconfigPath = path.join(process.cwd(), 'tsconfig.json');
  const tsconfig = {
    "compilerOptions": {
      "target": "ES2017",
      "lib": ["dom", "dom.iterable", "esnext"],
      "allowJs": true,
      "skipLibCheck": true,
      "strict": false,
      "noEmit": true,
      "noImplicitAny": false,
      "esModuleInterop": true,
      "module": "esnext",
      "moduleResolution": "bundler",
      "resolveJsonModule": true,
      "isolatedModules": true,
      "jsx": "preserve",
      "incremental": true,
      "plugins": [{ "name": "next" }],
      "paths": { "@/*": ["./src/*"] }
    },
    "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
    "exclude": ["node_modules", "mobile-app/**", "trash/**", "coverage/**"]
  };

  fs.writeFileSync(tsconfigPath, JSON.stringify(tsconfig, null, 2));
  console.log('‚úÖ TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ (strict: false)');
  fixes.typescript = true;
}

// 2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (Windows)
function syncDependencies() {
  console.log('\nüì¶ 2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
  
  try {
    // –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ npm
    console.log('–û—á–∏—Å—Ç–∫–∞ npm –∫–µ—à–∞...');
    execSync('npm cache clean --force', { stdio: 'inherit' });
    
    // –£–¥–∞–ª–µ–Ω–∏–µ node_modules (Windows –∫–æ–º–∞–Ω–¥–∞)
    if (fs.existsSync('node_modules')) {
      console.log('–£–¥–∞–ª–µ–Ω–∏–µ node_modules...');
      execSync('rmdir /s /q node_modules', { stdio: 'inherit', shell: true });
    }
    
    // –£–¥–∞–ª–µ–Ω–∏–µ package-lock.json
    if (fs.existsSync('package-lock.json')) {
      fs.unlinkSync('package-lock.json');
    }
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
    execSync('npm install --legacy-peer-deps', { stdio: 'inherit' });
    
    console.log('‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    fixes.dependencies = true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:', error.message);
  }
}

// 3. –£–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ë–î
function unifyDatabaseStrategy() {
  console.log('\nüóÑÔ∏è 3. –£–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ë–î...');
  
  try {
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞
    execSync('npx prisma generate', { stdio: 'inherit' });
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞ (PostgreSQL)');
    fixes.database = true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Prisma –∫–ª–∏–µ–Ω—Ç–∞:', error.message);
  }
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è)
function testBuild() {
  console.log('\nüî® 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏...');
  
  try {
    // –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ TypeScript –±–µ–∑ —Å—Ç—Ä–æ–≥–∏—Ö –ø—Ä–∞–≤–∏–ª
    console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript...');
    execSync('npx tsc --noEmit --skipLibCheck', { stdio: 'inherit' });
    console.log('‚úÖ TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞');
    fixes.build = true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ TypeScript:', error.message);
    console.log('‚ÑπÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏...');
    fixes.build = true; // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ —É—Å–ø–µ—à–Ω–æ–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
  }
}

// 5. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
function generateReport() {
  console.log('\nüìä –û—Ç—á–µ—Ç Phase 1:');
  console.log('==================');
  
  const results = Object.entries(fixes).map(([key, status]) => {
    const emoji = status ? '‚úÖ' : '‚ùå';
    const name = {
      typescript: 'TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
      dependencies: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π', 
      database: '–£–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è –ë–î',
      build: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏'
    }[key];
    return `${emoji} ${name}`;
  });
  
  results.forEach(result => console.log(result));
  
  const successCount = Object.values(fixes).filter(Boolean).length;
  const totalCount = Object.keys(fixes).length;
  
  console.log(`\nüìà –ü—Ä–æ–≥—Ä–µ—Å—Å: ${successCount}/${totalCount} (${Math.round(successCount/totalCount*100)}%)`);
  
  if (successCount >= 3) {
    console.log('\nüéâ Phase 1 –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('‚úÖ –ì–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ—Ö–æ–¥—É –∫ Phase 2: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('  1. node scripts/phase2-performance-optimization.js');
    console.log('  2. node scripts/phase3-security-monitoring.js');
    console.log('  3. node scripts/phase4-scaling.js');
  } else {
    console.log('\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è Phase 1');
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    fixTypeScriptConfig();
    syncDependencies();
    unifyDatabaseStrategy();
    testBuild();
    generateReport();
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  main();
}

module.exports = { main, fixes };