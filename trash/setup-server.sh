#!/bin/bash

# NORMALDANCE Server Setup Script
# –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ 176.108.246.49

set -e

GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log() { echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}"; }
info() { echo -e "${BLUE}[INFO] $1${NC}"; }
warn() { echo -e "${YELLOW}[WARN] $1${NC}"; }
error() { echo -e "${RED}[ERROR] $1${NC}"; exit 1; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if [[ $EUID -eq 0 ]]; then
    error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç root!"
fi

log "üéµ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ NORMALDANCE"

# –®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
log "–®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
sudo apt update && sudo apt upgrade -y

# –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
log "–®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
sudo apt install -y curl wget git htop nano ufw fail2ban \
    build-essential software-properties-common apt-transport-https \
    ca-certificates gnupg lsb-release

# –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
log "–®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker"
if ! command -v docker &> /dev/null; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    rm get-docker.sh
    info "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    info "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
log "–®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose"
if ! command -v docker-compose &> /dev/null; then
    sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    info "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    info "Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –®–∞–≥ 5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
log "–®–∞–≥ 5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js"
if ! command -v node &> /dev/null; then
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
    sudo apt-get install -y nodejs
    info "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
else
    info "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
fi

# –®–∞–≥ 6: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx
log "–®–∞–≥ 6: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx"
if ! command -v nginx &> /dev/null; then
    sudo apt install -y nginx
    sudo systemctl enable nginx
    sudo systemctl start nginx
    info "Nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    info "Nginx —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –®–∞–≥ 7: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL
log "–®–∞–≥ 7: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL"
if ! command -v psql &> /dev/null; then
    sudo apt install -y postgresql postgresql-contrib
    sudo systemctl enable postgresql
    sudo systemctl start postgresql
    info "PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    info "PostgreSQL —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –®–∞–≥ 8: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis
log "–®–∞–≥ 8: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis"
if ! command -v redis-cli &> /dev/null; then
    sudo apt install -y redis-server
    sudo systemctl enable redis-server
    sudo systemctl start redis-server
    info "Redis —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    info "Redis —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –®–∞–≥ 9: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ FFmpeg
log "–®–∞–≥ 9: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ FFmpeg"
sudo apt install -y ffmpeg sox lame flac vorbis-tools

# –®–∞–≥ 10: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
log "–®–∞–≥ 10: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞"
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw --force enable

# –®–∞–≥ 11: –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
log "–®–∞–≥ 11: –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞"
sudo mkdir -p /var/www/normaldance
sudo chown -R $USER:$USER /var/www/normaldance
cd /var/www/normaldance

mkdir -p {storage/{uploads,processed,static},logs,config}

# –®–∞–≥ 12: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL
log "–®–∞–≥ 12: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL"
sudo -u postgres psql << EOF
CREATE USER normaldance WITH PASSWORD 'secure_password_change_me';
CREATE DATABASE normaldance_platform OWNER normaldance;
CREATE DATABASE normaldance_store OWNER normaldance;
GRANT ALL PRIVILEGES ON DATABASE normaldance_platform TO normaldance;
GRANT ALL PRIVILEGES ON DATABASE normaldance_store TO normaldance;
\q
EOF

# –®–∞–≥ 13: –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
log "–®–∞–≥ 13: –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
cat > /var/www/normaldance/.env << EOF
# Database
DB_PASSWORD=secure_password_change_me
DATABASE_URL=postgresql://normaldance:secure_password_change_me@localhost:5432/normaldance_platform

# JWT
JWT_SECRET=$(openssl rand -base64 32)
NEXTAUTH_SECRET=$(openssl rand -base64 32)

# Payments
STRIPE_SECRET_KEY=sk_test_your_key_here
STRIPE_PUBLIC_KEY=pk_test_your_key_here

# Icecast
ICECAST_PASSWORD=$(openssl rand -base64 16)
ICECAST_ADMIN_PASSWORD=$(openssl rand -base64 16)

# Grafana
GRAFANA_PASSWORD=admin123_change_me

# URLs
NEXTAUTH_URL=https://dnb1st.ru
API_URL=https://api.dnb1st.ru
EOF

chmod 600 /var/www/normaldance/.env

# –®–∞–≥ 14: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot
log "–®–∞–≥ 14: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot"
if ! command -v certbot &> /dev/null; then
    sudo apt install snapd
    sudo snap install core
    sudo snap refresh core
    sudo snap install --classic certbot
    sudo ln -s /snap/bin/certbot /usr/bin/certbot
    info "Certbot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    info "Certbot —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –®–∞–≥ 15: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–®–∞–≥ 15: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "Docker: $(docker --version)"
echo "Docker Compose: $(docker-compose --version)"
echo "Node.js: $(node --version)"
echo "NPM: $(npm --version)"
echo "Nginx: $(nginx -v 2>&1)"
echo "PostgreSQL: $(sudo -u postgres psql -c 'SELECT version();' | head -3 | tail -1)"
echo "Redis: $(redis-cli --version)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
services=("nginx" "postgresql" "redis-server")
for service in "${services[@]}"; do
    if systemctl is-active --quiet $service; then
        echo -e "${GREEN}‚úÖ $service: –∞–∫—Ç–∏–≤–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå $service: –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω${NC}"
    fi
done

log "üéâ –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

echo ""
echo -e "${BLUE}–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo "1. –ü–æ–ª—É—á–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:"
echo "   sudo certbot certonly --manual --preferred-challenges dns -d dnb1st.ru -d '*.dnb1st.ru'"
echo "   sudo certbot certonly --manual --preferred-challenges dns -d dnb1st.store -d '*.dnb1st.store'"
echo ""
echo "2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx:"
echo "   sudo cp configs/nginx/normaldance.conf /etc/nginx/sites-available/"
echo "   sudo ln -s /etc/nginx/sites-available/normaldance.conf /etc/nginx/sites-enabled/"
echo "   sudo rm /etc/nginx/sites-enabled/default"
echo "   sudo nginx -t && sudo systemctl reload nginx"
echo ""
echo "3. –ö–ª–æ–Ω–∏—Ä—É–π—Ç–µ –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
echo "   git clone your-repo.git ."
echo "   docker-compose -f configs/docker/docker-compose.prod.yml up -d"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª–∏ –≤ .env —Ñ–∞–π–ª–µ!${NC}"